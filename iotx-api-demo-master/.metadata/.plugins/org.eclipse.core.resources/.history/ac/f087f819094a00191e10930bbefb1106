package snod.com.cn.iot.config;

import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.ApplicationListener;
import org.springframework.context.event.ContextRefreshedEvent;

import com.aliyun.openservices.iot.api.Profile;
import com.aliyun.openservices.iot.api.message.MessageClientFactory;
import com.aliyun.openservices.iot.api.message.api.MessageClient;
import com.aliyun.openservices.iot.api.message.callback.MessageCallback;
import com.aliyun.openservices.iot.api.message.entity.Message;

public class IotListener  implements ApplicationListener<ContextRefreshedEvent>{

	@Value(value = "${aliyun.iot.accessKey}")
	private String accessKey;
	@Value(value = "${aliyun.iot.accessSecret}")
	private String accessSecret;
	@Value(value = "${aliyun.iot.regionId}")
	private String regionId;
	@Value(value = "${aliyun.iot.uid}")
	private String uid;
	@Override
	public void onApplicationEvent(ContextRefreshedEvent arg0) {
		
        String endPoint = "https://" + uid + ".iot-as-http2." + regionId + ".aliyuncs.com";

        // 连接配置
        Profile profile = Profile.getAccessKeyProfile(endPoint, regionId, accessKey, accessSecret);

        // 构造客户端
        MessageClient client = MessageClientFactory.messageClient(profile);
        // 数据接收
        client.connect(messageToken -> {
        	  try {
	            Message m = messageToken.getMessage();
	            String str[]=m.getTopic().split("/");
	            String packgeName=str[1];
	            String deviceName=str[2];
	            String methodName=str[3];
            	if(m.toString().contains("online")) {
				Class clazz = Class.forName("snod.com.cn.iot.device."+packgeName+"."+deviceName);
				Method method = clazz.getDeclaredMethod(methodName, String.class);
				Object obje;
				obje = clazz.newInstance();
			    method.invoke(obje,new String(m.getPayload()));
            	}
			} catch (ClassNotFoundException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
            } catch (InstantiationException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (IllegalAccessException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (NoSuchMethodException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (SecurityException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (IllegalArgumentException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (InvocationTargetException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

            return MessageCallback.Action.CommitSuccess;
     
        });
	
	}
}
